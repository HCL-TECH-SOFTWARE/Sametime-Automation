# kubernetes_setup_master.yml
---
- name: Check if Kubernetes has already been initialized
  stat:
    path: '/etc/kubernetes/admin.conf'
  register: kubernetes_init_stat

- name: Store Kubernetes status (initialized or not) for future use.
  set_fact:
    kubernetes_initialized: '{{ true if kubernetes_init_stat.stat.exists else false }}'

- name: Print Kubernetes master node init
  vars:
    api_ip: '{{ kubernetes_apiserver_ip | default("", true) }}'
    apiserver_string: "{{ '--apiserver-advertise-address=' if (api_ip | length > 0) else '' }}"
  debug:
    msg: 'kubeadm init {{ apiserver_string }}{{ api_ip }} --pod-network-cidr={{ POD_CIDR }} --service-cidr={{ SERVICE_CIDR }}'

- name: Initialize Kubernetes master node
  become: true
  command: 'kubeadm init --apiserver-advertise-address={{ kubernetes_apiserver_ip }} --pod-network-cidr={{ POD_CIDR }} --service-cidr={{ SERVICE_CIDR }}'
  when: not kubernetes_initialized

- name: Create .kube directory
  file:
    path: '~/.kube'
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Copy admin.conf to a local directory
  become: true
  copy:
    src: '/etc/kubernetes/admin.conf'
    dest: '{{ ansible_user_dir }}/.kube/config'
    remote_src: true
    owner: '{{ ansible_effective_user_id |string }}'
    group: '{{ ansible_effective_group_id |string }}'
    mode: u=rw,g-r,o-r

- name: Untaint master-taint from all nodes. It allows to put pods on Master node
  command: 'kubectl taint nodes --all node-role.kubernetes.io/master-'
  when: not kubernetes_initialized

- name: Configure Calico networking
  command: 'kubectl apply -f {{ kubernetes_calico_manifest_file }}'
  when: not kubernetes_initialized
# config files location: /etc/cni/net.d

- name: Store kubeadm join command
  command: 'kubeadm token create --print-join-command'
  register: kubeadm_join_command
